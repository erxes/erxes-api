name: Api CI

on:
  push:
    branches:
      - '**'
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/api.yaml'
      - '!elkSyncer/**'
      - '!email-verifier/**'
      - '!engages-email-sender/**'
      - '!logger/**'
      - '!**.md'
  pull_request:
    branches:
      - master
      - develop
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/api.yaml'
      - '!elkSyncer/**'
      - '!email-verifier/**'
      - '!engages-email-sender/**'
      - '!logger/**'
      - '!**.md'

jobs:
  api:
    runs-on: ubuntu-18.04

    # name: Node ${{ matrix.node-version }}

    services:
      mongodb:
        image: mongo:3.6
        ports:
          - 27017:27017

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x

    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Node.js modules
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-api-${{ hashFiles('src/**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-api-${{ hashFiles('src/**/yarn.lock') }}
          ${{ runner.os }}-yarn-api-
          ${{ runner.os }}-yarn-

    - name: Install
      run: |
        yarn install

    - name: Lint
      run: |
        yarn lint

    - name: Tsc
      run: |
        yarn tsc

    - name: Test
      run: |
        yarn test
      env:
        MONGO_URL: mongodb://localhost/erxes
        TEST_MONGO_URL: mongodb://localhost/test
        JWT_TOKEN_SECRET: token
        MAIN_APP_DOMAIN: http://localhost:3000

    - name: Build
      if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' )
      run: |
        yarn build

    - name: Build docker image on push
      if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' )
      run: |
        docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
        docker build -t erxes/erxes-api:${GITHUB_REF#refs/heads/} -f Dockerfile .
        docker push erxes/erxes-api:${GITHUB_REF#refs/heads/}
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
